name: Pre-release
on:
  issue_comment:
    types: [created]

jobs:
  lerna_publish:
    runs-on: ubuntu-latest
    if: ${{github.event.issue.pull_request && contains(github.event.comment.body, "@copilot-robot prerelease")}}
    steps:
      - uses: actions/github-script@v3
        with:
          script: |
            try {
              const result = await github.reactions.createForIssueComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: context.event.comment.id,
                content: "+1"
              });
              return result.data
            } catch (err) {
              core.info(`Failed to set reaction error ${err}`)
            }
        env:
          GITHUB_TOKEN: ${{secrets.ROBOT_GITHUB_TOKEN}}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: "16.13.0"
      - name: Install Dependencies
        run: npm ci --no-optional
      - name: Configure git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{secrets.ROBOT_GITHUB_TOKEN}}
      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
        env:
          GITHUB_TOKEN: ${{secrets.ROBOT_GITHUB_TOKEN}}
      - name: Lerna publish
        id: publish
        run: |
          $(npm bin)/lerna publish\
            --dist-tag "dev-${GITHUB_REF#refs/heads/}"\
            --preid "dev-${GITHUB_REF#refs/heads/}"\
            --conventional-prerelease\
            -m 'chore(prerelease): publish'\
            --yes
            --summary-file
          echo 'RESULTS<<EOF' >> $GITHUB_OUTPUT
          cat ./lerna-publish-summary.json >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{secrets.ROBOT_GITHUB_TOKEN}}
          NODE_AUTH_TOKEN: ${{secrets.ROBOT_NPM_TOKEN}}
      - uses: actions/github-script@v3
        with:
          script: |
            try {
              let packageInfo = JSON.parse(process.env.PUBLISH_RESULT);
              const result = await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                content: `Hi, @${GITHUB_ACTOR}, a pre-release has been published:\n\n${packageInfo.map(package => `- ${package.packageName}@${package.version}`).join("\n")}`
              });
              return result.data
            } catch (err) {
              core.info(`Failed to reply to user with pre-release info ${err}`)
            }
        env:
          GITHUB_TOKEN: ${{secrets.ROBOT_GITHUB_TOKEN}}
          PUBLISH_RESULT: ${{steps.publish.outputs.RESULT}}
